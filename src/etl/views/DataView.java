/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etl.views;

import etl.constants.StringConstants;
import etl.readers.ReadCSV;
import etl.readers.ReadExcel;
import etl.readers.ReadJSON;
import etl.readers.ReadXML;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author suren
 */
public class DataView extends javax.swing.JFrame {

    /**
     * Creates new form DataView
     */
    private String filePath;
    private String fileType;
    
    //Readers
    private ReadCSV csvReader;
    private ReadXML xmlReader;
    private ReadJSON jsonReader;
    
    private String[] headers;
    public DataView(String selectedFilePath, String selectedFileType) {
        initComponents();
        this.filePath = selectedFilePath;   
        this.fileType = selectedFileType;
        
        switch(fileType){
            case StringConstants.CSV_EXTENSION:
                csvReader = new ReadCSV();
                ReadCSV.selectedFilePath = filePath;
                ReadCSV.tableView = dataTableView;
                ReadCSV.progressBar = loadingProBar;
                ReadCSV.extractBtn = extractBtn;                
                csvReader.start();
                break;
            case StringConstants.XML_EXTENSION:
                xmlReader = new ReadXML();
                ReadXML.selectedFilePath = filePath;
                ReadXML.tableView = dataTableView;
                ReadXML.progressBar = loadingProBar;
                ReadXML.extractBtn = extractBtn;
                xmlReader.start();
                //xmlRead();
                break;
            case StringConstants.EXCEL_EXTENSION:
                ReadExcel excelReader = new ReadExcel();
                DefaultTableModel excelModel = excelReader.readExcelFrom(filePath); 
                dataTableView.setModel(excelModel);
                break;
            case StringConstants.JSON_EXTENSION:
                jsonReader = new ReadJSON();
                ReadJSON.selectedFilePath = filePath;
                ReadJSON.tableView = dataTableView;
                ReadJSON.progressBar = loadingProBar;
                ReadJSON.extractBtn = extractBtn;
                jsonReader.start();
                break;
            case StringConstants.SQL_EXTENSION:
                break;
        }      
    }  
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        extractBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTableView = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        loadingProBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data View");

        extractBtn.setText("Extract");
        extractBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setDoubleBuffered(true);

        dataTableView.setAutoCreateRowSorter(true);
        dataTableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTableView.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        dataTableView.setDragEnabled(true);
        dataTableView.setEnabled(false);
        dataTableView.setName(""); // NOI18N
        jScrollPane1.setViewportView(dataTableView);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("View of Selected Data");

        loadingProBar.setStringPainted(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadingProBar, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(extractBtn)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadingProBar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(extractBtn))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void extractBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractBtnActionPerformed
        //To get headers string array to bind in jcombobox
        switch(fileType){
            case StringConstants.CSV_EXTENSION:                
                headers = csvReader.getHeaders();
                //addCheckBox();
                break;
            case StringConstants.XML_EXTENSION:
                headers = xmlReader.getHeaders();
                //addCheckBox();
                break;
            case StringConstants.EXCEL_EXTENSION:
                
                break;
            case StringConstants.JSON_EXTENSION:
                headers = jsonReader.getHeaders();
                break;
            case StringConstants.SQL_EXTENSION:
                break;
        }
        dispose();
        new AttributeMapper(filePath,fileType,headers).setVisible(true);       
    }//GEN-LAST:event_extractBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTableView;
    private javax.swing.JButton extractBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar loadingProBar;
    // End of variables declaration//GEN-END:variables
}
