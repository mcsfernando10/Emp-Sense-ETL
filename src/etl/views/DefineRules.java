/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etl.views;

import com.google.gson.Gson;
import etl.commonViews.HomeView;
import etl.constants.NumberConstants;
import etl.constants.StringConstants;
import etl.controllers.CreateCleansedCSV;
import etl.controllers.CreatingDBDialog;
import etl.controllers.CreateSelectDBTableDialog;
import etl.models.attribute;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author suren
 */
public class DefineRules extends javax.swing.JFrame {

    /**
     * Creates new form DefineRules
     */
    //All declared variables
    private final List<attribute> attributes;
    private DefaultListModel model;
    private final String filePath;
    private int predictOrTrainData;
    public DefineRules(
            List<attribute> passedAttributes, 
            String selFilePath, int predictOrTrainData
    ) {
        initComponents();
        
        setWindowIcon();
        selectedFieldTxt.setBackground(new Color(0, 0, 0, 0));        
        this.attributes = passedAttributes;
        this.filePath = selFilePath;
        this.predictOrTrainData = predictOrTrainData;
        //attributes = new ArrayList<>();
        
        //Generate attribute Selection List
        model = new DefaultListModel();
        for (attribute curAttr : attributes) {
            model.addElement(curAttr.getAttrName());
        }
        attributeList.setModel(model);
        
        /*
        ListModel<String> listModel = attributeList.getModel();
        for (int i = NumberConstants.ZERO; i < listModel.getSize(); i++) {
            attributes.add((new attribute(listModel.getElementAt(i))));
        }      */
        attributeList.setSelectedIndex(NumberConstants.ZERO);
        String selectedAttr = attributeList.getSelectedValue();
        selectedFieldTxt.setText(selectedAttr); 
        
        List<String> definedRules = getAttributeFromName(selectedAttr).getDefinedRulesList();
        DefaultComboBoxModel<String> definedRulesModel
                = new DefaultComboBoxModel<>(definedRules.toArray(new String[NumberConstants.ZERO]));
        rulesComBox.setModel(definedRulesModel);
    }

    private attribute getAttributeFromName(String attrName){
        for(int i=NumberConstants.ZERO;i<attributes.size();i++){
            attribute curAttr = attributes.get(i);
            if(curAttr.getAttrName().equals(attrName)){
                return curAttr;
            }
        }
        return null;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        attributeList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        selectedFieldTxt = new javax.swing.JTextField();
        rulesComBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rulesList = new javax.swing.JList<>();
        addRuleBtn = new javax.swing.JButton();
        removeRulesBtn = new javax.swing.JButton();
        createDataBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EmpSense - Add Rules for Attributes  (IT Industry)");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Select Attribute");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(50, 90, 120, 30);

        attributeList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attributeListMouseClicked(evt);
            }
        });
        attributeList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                attributeListKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(attributeList);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(40, 130, 236, 360);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Selected Field");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(310, 110, 100, 20);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etl/images/bg_2.png"))); // NOI18N
        jPanel2.add(jLabel9);
        jLabel9.setBounds(410, 110, 210, 30);

        selectedFieldTxt.setEditable(false);
        selectedFieldTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        selectedFieldTxt.setBorder(null);
        selectedFieldTxt.setOpaque(false);
        jPanel2.add(selectedFieldTxt);
        selectedFieldTxt.setBounds(420, 110, 200, 30);

        rulesComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Rule", "Remove Null Value Rows", "Clean Number values with Average" }));
        jPanel2.add(rulesComBox);
        rulesComBox.setBounds(410, 150, 210, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Rules");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(310, 150, 60, 20);

        rulesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rulesListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(rulesList);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(310, 190, 310, 250);

        addRuleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etl/images/add.png"))); // NOI18N
        addRuleBtn.setToolTipText("Add Rules ");
        addRuleBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addRuleBtn.setBorderPainted(false);
        addRuleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRuleBtnActionPerformed(evt);
            }
        });
        jPanel2.add(addRuleBtn);
        addRuleBtn.setBounds(320, 450, 39, 39);

        removeRulesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etl/images/remove.png"))); // NOI18N
        removeRulesBtn.setToolTipText("Remove Rules");
        removeRulesBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeRulesBtn.setBorderPainted(false);
        removeRulesBtn.setEnabled(false);
        removeRulesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRulesBtnActionPerformed(evt);
            }
        });
        jPanel2.add(removeRulesBtn);
        removeRulesBtn.setBounds(370, 450, 39, 39);

        createDataBtn.setBackground(new java.awt.Color(255, 255, 255));
        createDataBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createDataBtn.setForeground(new java.awt.Color(0, 51, 255));
        createDataBtn.setText("Create Data Store");
        createDataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createDataBtnMouseClicked(evt);
            }
        });
        jPanel2.add(createDataBtn);
        createDataBtn.setBounds(420, 450, 200, 40);

        jLabel4.setBackground(new java.awt.Color(51, 102, 255));
        jLabel4.setOpaque(true);
        jPanel2.add(jLabel4);
        jLabel4.setBounds(300, 90, 330, 410);

        jLabel8.setBackground(new java.awt.Color(51, 102, 255));
        jLabel8.setOpaque(true);
        jPanel2.add(jLabel8);
        jLabel8.setBounds(30, 90, 260, 410);

        jLabel6.setBackground(new java.awt.Color(0, 0, 102));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setOpaque(true);
        jPanel2.add(jLabel6);
        jLabel6.setBounds(20, 80, 620, 430);

        jLabel7.setBackground(new java.awt.Color(51, 102, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Add Rules for Attributes");
        jLabel7.setOpaque(true);
        jPanel2.add(jLabel7);
        jLabel7.setBounds(20, 20, 620, 50);

        jLabel5.setBackground(new java.awt.Color(0, 0, 102));
        jLabel5.setOpaque(true);
        jPanel2.add(jLabel5);
        jLabel5.setBounds(0, 0, 660, 520);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
    * @Method setWindowIcon 
    * Set Window Icon
    */
    private void setWindowIcon(){
        //Set ImageIcon of window
        ImageIcon img = new ImageIcon(StringConstants.ICON_FILE_PATH);
        setIconImage(img.getImage());
    }
    
    /*
    * @Method attributeListMouseClicked
    * Get Selected attribte from the list and populate it's defined rules 
    * Enable or disable the remove button according to the rules
    * @param  MouseEvent
    */
    private void attributeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attributeListMouseClicked
        populateRulesList();
        enableOrDisableRemoveBtn();
    }//GEN-LAST:event_attributeListMouseClicked
    
    /*
    * @Method addRuleBtnActionPerformed
    * Add the selected rule to attributes list
    * @param  ActionEvent
    */
    private void addRuleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRuleBtnActionPerformed
        //Check user selected a rule
        if(rulesComBox.getSelectedIndex() != NumberConstants.ZERO){
            //initialize the model
            model = new DefaultListModel();
            //get selected Attribute
            String selectedAttrName = attributeList.getSelectedValue();        
            attribute selectedAttr = getAttribute(selectedAttrName);
            /*get selected rule from the dropdown and check if it is already 
            exists in the rules list of selected Attribute*/
            String selectedRule = (String) rulesComBox.getSelectedItem(); 
            if(!selectedAttr.setRule(selectedRule)){
                JOptionPane.showMessageDialog(null, 
                        StringConstants.RULE_ERROR);
            }
            //Get rules and populate JList model
            List<String> rulesOfSelAttr = selectedAttr.getRules();
            for (String rule : rulesOfSelAttr) {
                model.addElement(rule);
            } 
            rulesList.setModel(model);
            //If model has rules then select first index
            if(rulesOfSelAttr.size() > NumberConstants.ZERO)
                rulesList.setSelectedIndex(NumberConstants.ZERO);
        } else {
            JOptionPane.showMessageDialog(null, 
                        StringConstants.INVALID_RULE);
        }        
        enableOrDisableRemoveBtn();        
    }//GEN-LAST:event_addRuleBtnActionPerformed

    /*
    * @Method attributeListKeyReleased
    * Detect up or down arrow keys and populate Rules
    * @param  KeyEvent
    */
    private void attributeListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_attributeListKeyReleased
        //Detect up or down arrow keys and populate Rules
        int keyCode = evt.getKeyCode();
        switch(keyCode){
            case KeyEvent.VK_UP:
                populateRulesList();
                break;
            case KeyEvent.VK_DOWN:
                populateRulesList();                
                break;            
        }
    }//GEN-LAST:event_attributeListKeyReleased

    /*
    * @Method rulesListMouseClicked
    * Enable or disable accroding to the rules list
    * @param  MouseEvent
    */
    private void rulesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rulesListMouseClicked
        enableOrDisableRemoveBtn();
    }//GEN-LAST:event_rulesListMouseClicked

    
    /*
    * @Method removeRulesBtnActionPerformed
    * Remove selected rule from selected attribute
    * @param  ActionEvent
    */
    private void removeRulesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRulesBtnActionPerformed
        //Check user comfirms remove
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, 
                StringConstants.REMOVE_RULE,
                StringConstants.WARNING,dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            //Get the attribute
            String selectedAttribute = attributeList.getSelectedValue();
            attribute selectedAttr = getAttribute(selectedAttribute);
            //Select the rule
            String selectedRule = rulesList.getSelectedValue();
            selectedAttr.removeRule(selectedRule);
            System.out.println(selectedRule);
            
            populateRulesList();
        }
        enableOrDisableRemoveBtn(); 
    }//GEN-LAST:event_removeRulesBtnActionPerformed

    private void createDataBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createDataBtnMouseClicked
        //Show popup window
        CreatingDBDialog dialog = new CreatingDBDialog(this, 
               StringConstants.CREATING_DB , StringConstants.PLEASE_WAIT);
        dialog.setSize(300, 200);         
        CreateCleansedCSV.filePath = filePath;
        CreateCleansedCSV.dbDialog = dialog;
        CreateCleansedCSV.selectedDBTable = predictOrTrainData;
        //Create rules json file
        createJSONFile();
        CreateCleansedCSV cleanCSV = new CreateCleansedCSV();
        cleanCSV.start();        
    }//GEN-LAST:event_createDataBtnMouseClicked

    /*
    * @Method formWindowClosing 
    * Prevent closing system and display home page
    * @param  WindowEvent
    */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        if (JOptionPane.showConfirmDialog(this, 
            StringConstants.CLOSE_WINDOW_QUESTION, StringConstants.CLOSE_WINDOW, 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                dispose();
                new HomeView().setVisible(true);
        } 
    }//GEN-LAST:event_formWindowClosing

    /*
    * @Method populateRulesList
    * Display rules accroding to the selected attribute
    */
    private void populateRulesList(){
        String selectedAttribute = attributeList.getSelectedValue();
        //Set text
        selectedFieldTxt.setText(selectedAttribute);
        //initialize the model
        model = new DefaultListModel();
        //get selected Attribute       
        attribute selectedAttr = getAttribute(selectedAttribute);
        //Get rules and populate JList model
        List<String> rulesOfSelAttr = selectedAttr.getRules();
        for (String rule : rulesOfSelAttr) {
            model.addElement(rule);
        } 
        rulesList.setModel(model);
        //If model has rules then select first index
        if(rulesOfSelAttr.size() > NumberConstants.ZERO)
            rulesList.setSelectedIndex(NumberConstants.ZERO);
        
        List<String> definedRules = getAttributeFromName(selectedAttribute).getDefinedRulesList();
        DefaultComboBoxModel<String> definedRulesModel
                = new DefaultComboBoxModel<>(definedRules.toArray(new String[0]));
        rulesComBox.setModel(definedRulesModel);
    }
    
    /*
    * @Method getAttribute
    * Get attribute from given name
    * @param  String
    * @returns Attribute
    */
    private attribute getAttribute(String attributeName){
        int i = NumberConstants.ZERO;
        attribute selectedAttr = new attribute();
        for (attribute attr : attributes) {
            if(attr.getAttrName().equals(attributeName)){
                selectedAttr =  attributes.get(i);
            }  
            i++;
        }
        return selectedAttr;
    }
    
    /*
    * @Method enableOrDisableRemoveBtn
    * enable or disable remove button according to the rules list
    */
    private void enableOrDisableRemoveBtn(){
        if(rulesList.getModel().getSize()>NumberConstants.ZERO)
            removeRulesBtn.setEnabled(true);
        else 
            removeRulesBtn.setEnabled(false);
    }   
    
    /*
    * @Method createJSONFile
    * Create JSON file to be read in python
    */
    private void createJSONFile(){
        Gson gsonForAttr = new Gson();
        //Create JSON array for attributes
        JSONArray attrs = new JSONArray();        
        JSONParser parser = new JSONParser();        
        try {
            for(attribute attr : attributes){                
                String jsonStringForAttr = gsonForAttr.toJson(attr);
                Object attrObj = parser.parse(jsonStringForAttr);
                JSONObject attrJSONObj = (JSONObject)attrObj;
                attrs.add(attrJSONObj);
            }
            
            JSONObject mainJSONObj = new JSONObject();
            mainJSONObj.put(StringConstants.ATTRIBUTES_TXT, attrs);
            mainJSONObj.put(StringConstants.FILE_PATH_TXT, filePath);
            FileWriter file;
            try {
                file = new FileWriter(StringConstants.ATTR_JSON_PATH);
                file.write(mainJSONObj.toJSONString());
                file.flush();
                file.close();
                System.out.println(mainJSONObj.toJSONString());
            } catch (IOException ex) {
                System.out.println("Error in reading or writing in file");
            }
        } catch (ParseException ex) {
            System.out.println("Parsing Error");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DefineRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DefineRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DefineRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DefineRules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DefineRules(new ArrayList<attribute>(),"/home/suren/Desktop/data.csv",1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRuleBtn;
    private javax.swing.JList<String> attributeList;
    private javax.swing.JButton createDataBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeRulesBtn;
    private javax.swing.JComboBox<String> rulesComBox;
    private javax.swing.JList<String> rulesList;
    private javax.swing.JTextField selectedFieldTxt;
    // End of variables declaration//GEN-END:variables
}
